worker_processes  auto;
error_log stderr warn;
daemon off;
pid logs/nginx.pid;

events {
  worker_connections  4000;
  multi_accept on;
}

http {
  include mime.types;

  server {
    listen ${{PORT}};
    lua_code_cache ${{CODE_CACHE}};

    location / {
      set $_url "";
      resolver ${{DNS_SERVER}};
      content_by_lua '
        require("lapis").serve("app")
      ';
    }

    location /proxy {
        internal;
        rewrite_by_lua "
          local req = ngx.req

          for k,v in pairs(req.get_headers()) do
            if k ~= 'content-length' then
              req.clear_header(k)
            end
          end

          if ngx.ctx.headers then
            for k,v in pairs(ngx.ctx.headers) do
              req.set_header(k, v)
            end
          end
        ";

        resolver ${{DNS_SERVER}};
        proxy_http_version 1.1;
        proxy_pass $_url;
    }
  }
}
