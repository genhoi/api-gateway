worker_processes  auto;
error_log stderr warn;
daemon off;
pid logs/nginx.pid;

events {
  worker_connections 4000;
  multi_accept on;
}

http {
  include mime.types;

  server {
    listen 80;
    lua_code_cache on;

    location / {
      set $_url "";
      content_by_lua_block {
        local reqs = {}
        table.insert(reqs, {
            "/proxy",
            { vars = {_url = "http://openresty_hello/"} }
        })
        table.insert(reqs, {
            "/proxy",
            { vars = {_url = "http://openresty_world/"} }
        })

        local resps = { ngx.location.capture_multi(reqs) }

        local buf = {};
        table.insert(buf, resps[1].body)
        table.insert(buf, ", ")
        table.insert(buf, resps[2].body)

        ngx.say(table.concat(buf));
      }
    }

    location /proxy {
        internal;
        rewrite_by_lua "
          local req = ngx.req

          for k,v in pairs(req.get_headers()) do
            if k ~= 'content-length' then
              req.clear_header(k)
            end
          end

          if ngx.ctx.headers then
            for k,v in pairs(ngx.ctx.headers) do
              req.set_header(k, v)
            end
          end
        ";

        resolver 127.0.0.11;
        proxy_http_version 1.1;
        proxy_pass $_url;
    }
  }
}
